[/==============================================================================
    Use, modification and distribution is subject to the Boost Software License,
    Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
    http://www.boost.org/LICENSE_1_0.txt)
===============================================================================/]

[#encoding_policy]
[section The `encoding_policy` facet]
[import ../example/encoding_conversion.cpp]
```
namespace boost {
namespace stringify {
inline namespace v0 {

enum class error_handling
{
    replace, stop, ignore
};

class encoding_policy
{
public:

    constexpr encoding_policy
        ( error_handling err_hdl
        , bool allow_surr = false );
        
    constexpr encoding_policy(const encoding_policy&);
    constexpr encoding_policy& operator=(const encoding_policy& other);
    constexpr bool operator==(const encoding_policy& other) const;

    constexpr bool allow_surr() const;
    constexpr stringify::v0::error_handling err_hdl() const;
};

} } } // namespace boost::stringify::v0
```
The `error_handling` enumeration specifies how invalid sequences are
handled:

[itemized_list

[[#encoding_error_replace] [*`error_handling::replace`:] This is the default.
Each invalid sequence is replace by the
[@https://en.wikipedia.org/wiki/Specials_(Unicode_block)#Replacement_character
replacement character "\uFFFD"] (U+FFFD). When the input is UTF-8,
the library follows the practice recommended by the Unicode
Standard.
[footnote
  Search for ['"Best Practices for Using U+FFFD"] in
  [@https://www.unicode.org/versions/Unicode10.0.0/ch03.pdf Chapter 3]
  of Unicode Standard. ]
[error_handling_ignore]
]


[[#encoding_error_stop] [*`error_handling::stop`:] Stop the transcoding and emit
`std::make_error_code(std::errc::illegal_byte_sequence)`.
[error_handling_stop]
]


[[#encoding_error_ignore] [*`error_handling::ignore`:] The illegal byte sequence is removed
from the transcoding.
[error_handling_ignore]
]

]

[#allow_surrogates]
The flag `allow_surr` specifies wheter the surrogates are allowed.
In UTF-16 this means to allow unpaired surrogates (high surrogate not followed by a low surrogate, or a low surrogate not proceeded by a high surrogate). In ASCII and ASCII extensions this facets has no effect.

[allow_surrogates]

[endsect]
