[/==============================================================================
    Use, modification and distribution is subject to the Boost Software License,
    Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
    http://www.boost.org/LICENSE_1_0.txt)
===============================================================================/]

[import ../example/trivial_sample.cpp]
[import ../example/syntax_samples.cpp]
[section Syntax]

[/ Railroad diagram generated from the EBNF below, in online generator bottlecaps.de/rr

 syntax ::= 'leading_expression'
  ( '.reserve( size )' | '.reserve_calc()' | '.facets( facets... )' ) *
  ( '.as(  assembly_string ) ( arguments... ) '
  | '.as(  assembly_string, arguments... ) '
  | '( arguments... ) ' )
]

[#syntax_diagram]

[$../syntax.png]
[footnote This railroad diagram was generated on [@http://bottlecaps.de/rr bottlecaps.de/rr]]

[/
where:

* the ['[*leading expression]]  the varies according to the output type, as show in the table below
* the ['[*assembly string]] is explained [link assembly_string here]
* ['[*facets]] are explained in [link facets.facets another section]
* ['[*reservation]] is explained [link syntax_reserve here]
]

[include:output_types output_types.qbk]

[#syntax_reserve]
[section Reserving output size]

The following member functions only have effect in some output types ( cases 1 to 7 in [link output_types this table], or when you create the [link OutputBufferConcept reserve] method when defining your own output type ). 

* [*`reserve_calc()`] : The necessary amount of characters is calculated and reserved in the destination object.
* [*`reserve(std::size_t size)`] : Reserve `size` characters.
* [*`no_reserve()`] : No reservation is done. This is the default.

[syntax_reserve]
[endsect]


[include:assembly_string assembly_string.qbk]

[include:format_functions format_functions.qbk]

[include:facets facets.qbk]

[endsect]

