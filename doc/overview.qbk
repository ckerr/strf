[/==============================================================================
    Use, modification and distribution is subject to the Boost Software License,
    Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
    http://www.boost.org/LICENSE_1_0.txt)
===============================================================================/]

[section Overview]

[warning
This library is not part of the Boost C++ Libraries yet.
It is still in and early stage of development and subject to change without
preserving backwards compatibility.
]

Boost.Stringify is a locale-independent formatting library which

* has good [link benchmarks.benchmarks.performance performance]
* supports all character types ( `char`, `wchar_t`, `char32_t` and `char16_t`)
* supports many [link output_types.output_types destination types]
* is extensible 

[h3 As static library]

[def __STRINGIFY_CPP__
[@../../build/stringify.cpp build/stringify.cpp]
]

By default Boost.Stringify is prepared to be used as a header-only library. But can use it as a static library, which reduces [link benchmarks.benchmarks.compilation_perfomance code bloat].

In order to do this, you must define the macro `BOOST_STRINGIFY_NOT_HEADER_ONLY`.

And in order to build the library, since there is only one source file ( __STRINGIFY_CPP__ ), probably the best way it to just copy this file to your own project, and configure the use the build system of your choice to generate the library file from it.

[h3 Compliance]

In its current state, Boost.Stringify is known to work in the following compilers:

* GCC 6 and 7
* Clang 4.2
* Visual Studio 2017 15.2

However, more recent compilers may be necessary as the library evolves.

[endsect]

