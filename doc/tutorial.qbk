[/==============================================================================
    Use, modification and distribution is subject to the Boost Software License,
    Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
    http://www.boost.org/LICENSE_1_0.txt)
===============================================================================/]

[import ../example/v0/trivial_sample.cpp]
[import ../example/v0/syntax_samples.cpp]
[import ../example/v0/facets.cpp]
[section Syntax]

[/ Railroad diagram generated from the EBNF below, in online generator bottlecaps.de/rr

  usage ::= 'leading_expression' ( '.with(facets...)' ) * 
                                 ( '(assembly_string)' | '()' ) ?
                                 ( ' = { arguments... }' | '[{ arguments... }]' )
]

[#syntax_diagram]
[$../usage.png]

Example 

[trivial_sample]

[variablelist

[[Leading expression]
 [This is the part of the expression the varies according to the output type, as show in [link output_types.output_types this table].]
]

[[Assembly string]
 [The [link section_assembly_string assembly_string] is analogous to what in others formatting libraries is called as the /format string/, but is does not specify any formatting. Here, the term "/format string/" usually refers to something else.]
]

[[Arguments]
[An [link section_input_types input argument] can be just a value to be stringified as above, or it can be a /braced-init-list/ composed by two arguments: the first one is the value to be stringified whose type defines the type and the purpose of the second argument, which may also be a /braced-init-list/ and usually specifies formatting ( as described [link conventional_formatting here] ). For example:
[trivial_formatting_sample]
This /braced-init-list/ aims to provide a pratical and compact syntax for formatting. But it does not support many formatting options, just those more frequently used. /Facets/ can be used to compensate this limitation.]
]

[ [Facets]
[[link section_facets Facets] can be used for ordinary formatting, like changing the default alignment or numeric base. But also to customize more complex things.]
]

]


[/ The reason why one would use the empty call `()` without any assembly string is t ]

[/
However keep in mind that an input type does not necessarily take formatting
arguments as in the sample above. Actually if an user add support for some
user-defined type, it is up to him/her to decide what sort of formatting
options are avaible, if any. A certain input may not use any formatting string,
and if it does, it doesn't have to follow the table above. 
Refer to the documentation of each input type.
]

[endsect]

