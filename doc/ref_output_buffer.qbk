[/==============================================================================
    Use, modification and distribution is subject to the Boost Software License,
    Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
    http://www.boost.org/LICENSE_1_0.txt)
===============================================================================/]

[#OutputBuffer]
[section Concept ['OutputBuffer]]

A given type [~T] is an `OuputBuffer`, if it satisfies the following conditions:

[itemized_list
        [ [~T] a is concrete class that derives from 
          __boost_basic_outbuf__`<`[~CharT]`>`, where [~CharT]
          is `char`, `char16_t`, `char32_t` or `wchar_t`.]
        [ It has a `finish()` public member function. ]

        [ [#OutputBuffer_reserve] [_Optionally], it contains a
          public member function `reserve(std::size_t)`.]
]

[/
 If present,
          this function is called no more than once, and just after the
          constructor,
          and according to the use of [link overview_reserve `reserve_auto()`,
          `reserve()` or `no_reserve()`] in the [link usage_syntax basic
          invocation syntax]. The parameter tells how many characters will
          be written before `finish()` is called.

This function is called
          just before `foobar_writer` is destroyed. Its returned value is what
          the expression [~leading_expression]` ... (` [~args]` ...)` returns.


]

[endsect]

