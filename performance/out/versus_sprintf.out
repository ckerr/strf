
Copy from a string literal:
    11.7  char_ptr_output << listf{"hello"}
    2.61  write_hello(char_ptr_output)
   0.978  sprintf(char_ptr_output, "hello")
   0.978  sprintf(char_ptr_output, "%s", "hello")
   0.978  strcpy(char_ptr_output, "hello")

Copy from a heap allocated short string:
    11.7  char_ptr_output << listf{hello}
    5.21  strcpy(char_ptr_output, hello)
    43.6  sprintf(char_ptr_output, hello)
    4.88  sprintf(char_ptr_output, "%s", hello)
    88.2  sprintf(char_ptr_output, fmt, hello)

Copy two strings
    23.1  char_ptr_output << listf{"hello", "hello"}
     145  sprintf(char_ptr_output, "%s%s", "hello", "hello")

Copy a long string ( 1000 characters ):
     120  char_ptr_output << listf{long_string}
    72.9  strcpy(char_ptr_output, long_string)
     146  sprintf(char_ptr_output, long_string)
    72.6  sprintf(char_ptr_output, "%s", long_string)
     777  sprintf(char_ptr_output, fmt, long_string)

write integers
    10.9  char_ptr_output << listf{25}
    33.6  char_ptr_output << listf{25, 25, 25}
    55.4  char_ptr_output << listf{INT_MAX}
     164  char_ptr_output << listf{INT_MAX, INT_MAX, INT_MAX}
    44.3  char_ptr_output << listf{"ten =  ", 10, ", twenty = ", 20}
     101  sprintf(char_ptr_output, "%d", 25)
     184  sprintf(char_ptr_output, "%d%d%d", 25, 25)
     127  sprintf(char_ptr_output, "%d", INT_MAX)
     294  sprintf(char_ptr_output, "%d%d%d", INT_MAX, INT_MAX, INT_MAX)
     166  sprintf(char_ptr_output, "ten = %d, twenty= %d", 10, 20)
